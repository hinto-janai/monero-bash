#!/usr/bin/env bash
# tar + gpg backups

backup_Wallets()
{
	# CHECK IF FILE ALREADY EXISTS
	if [[ -f "$dotMoneroBash/backup.tar" ]]; then
		print_Error_Exit "$dotMoneroBash/backup.tar already exists!"
	elif [[ -f "$dotMoneroBash/backup.tar.gpg" ]]; then
		print_Error_Exit "$dotMoneroBash/backup.tar.gpg already exists!"
	fi

	# PASSWORD-BASED AES256 ENCRYPTION (output file: backup.tar.gpg)
	$bblue; echo "Backing up wallets..." ;$off
	cd "$dotMoneroBash" || die "Cannot cd to directory $dotMoneroBash"
	tar -cf "backup.tar" "wallets" --transform 's/wallets/backup/'
 	if gpg --no-symkey-cache --cipher-algo AES256 -c "backup.tar" ; then
		rm "backup.tar"
		print_Error_Exit "GPG error"
	fi
	rm "backup.tar"
	$bwhite; echo -n "Cipher algo: " ;$white; echo "AES256"
	$bwhite; echo -n "Key type: " ;$white; echo "Passphrase"
	$bwhite; echo -n "Encrypted wallet tar: " ;$white; echo "$dotMoneroBash/backup.tar.gpg"
	$bwhite; echo -n "To decrypt: " ;$bgreen; echo -n "monero-bash decrypt"
	$bwhite; echo -n " OR " ;$bgreen; echo "gpg backup.tar.gpg && tar -xf backup.tar"
}

backup_Decrypt()
{
	[[ -d "$dotMoneroBash/backup" ]]&& print_Error_Exit "$dotMoneroBash/backup already exists, please move!"
	[[ -f "$dotMoneroBash/backup.tar" ]]&& print_Error_Exit "$dotMoneroBash/backup.tar already exists!"
	[[ ! -f "$dotMoneroBash/backup.tar.gpg" ]]&& print_Error_Exit "$dotMoneroBash/backup.tar.gpg was not found!"
	$bblue; echo "Decrypting backup..." ;$off
	cd "$dotMoneroBash" || die "Cannot cd to directory $dotMoneroBash"
	gpg --no-symkey-cache "backup.tar.gpg"
	error_Exit "Decrypt failed"
	tar -xf "backup.tar"
	error_Exit "tar failed"
	rm "backup.tar"
	$bwhite; echo -n "Decrypted backup: " ;$white; echo "$dotMoneroBash/backup"
}

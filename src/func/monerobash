#!/usr/bin/env bash
#
# monero-bash install/uninstall functions

###################################################   START OF INSTALL FUNCTION   ###################################################
monerobash_Install()
{
	local SYSTEM_NAME="$(uname)"
	case $SYSTEM_NAME in
		*)
			$bred; echo "monero-bash is only supported on GNU/Linux"
			$bred; echo "Exiting..."; $off
			exit 1
			;;
		*"Linux"*|*"linux"*) :;;
	esac

	$bred; echo "###################################################################"
	$bred; echo "#            monero-bash configuration & installation             #"
	$bred; echo "###################################################################"

while true ;do
	# $HOME/.bitmonero check
	if [[ -d "$HOME/.bitmonero" ]]; then
		$ired; echo "Monero data folder detected"
		$white; echo -n "Use "
		$ired; echo -n "$HOME/.bitmonero"
		$white; echo -n "? (Y/n): " ;$iwhite
		Yes(){ alreadyFoundDataPath="true" ;}
		No(){ :;}
		prompt_YESno
	fi
	if [[ $alreadyFoundDataPath != "true" ]]; then
		$white; echo -n "Monero data path [Enter for default]: " ;$iwhite
		read inputData
	fi

	# Data Path Confirmation
	if [[ $alreadyFoundDataPath = "true" ]]; then
		$white; echo -n "Data path: "
		$ired; echo "$HOME/.bitmonero"
		$white; echo -n "Is this okay? (Y/n) "
		Yes(){ echo "Data path set!" ;yes="true";}
		No(){ :;}
		prompt_YESno
	elif [[ $alreadyFoundDataPath != "true" ]]; then
		$white; echo -n "Data path: "
		if [[ "$inputData" = "" ]]; then
			$ired; echo "$bitMonero"
		else
			$ired; echo "$inputData"
		fi
		$white; echo -n "Is this okay? (Y/n) "
		Yes(){ echo "Data path set!" ;yes="true";}
		No(){ :;}
		prompt_YESno
	fi
	[[ "$yes" = "true" ]]&& break
done

# Installation Prompt
	$bwhite; echo -n "Start "
	$bred; echo -n "monero-bash "
	$bwhite; echo -n "install? (Y/n) "
	Yes(){ $white; echo "Starting..." ;}
	No(){ $white; echo "Exiting..." ;exit;}
	prompt_YESno
	prompt_Sudo
	error_Exit "Sudo is required to install monero-bash"

# Check if already installed
if [[ -e /usr/local/share/monero-bash ]]; then
	$bred; echo "ERROR: "
	$bwhite; echo "/usr/local/share/monero-bash already detected!"
	exit
fi

# Hash Integrity Check
	print_GreenHash "Checking monero-bash hash integrity"
	CHECK_HASH_LIST
	alreadyCheckedHashList="true"

# TRAP
trap "" 1 2 3 6 15

# Deleting Git Files
	print_GreenHash "Cleaning up git files"
	[[ -d "$installDirectory/.git" ]]&& sudo rm -r "$installDirectory/.git"
	[[ -f "$installDirectory/.gitignore" ]]&& sudo rm -r "$installDirectory/.gitignore"
	[[ -f "$installDirectory/LICENSE" ]]&& sudo rm "$installDirectory/LICENSE"
	[[ -f "$installDirectory/README.md" ]]&& sudo rm "$installDirectory/README.md"
	[[ -f "$installDirectory/CHANGELOG.md" ]]&& sudo rm "$installDirectory/CHANGELOG.md"
	[[ -d "$installDirectory/docs" ]]&& sudo rm -r "$installDirectory/docs"
	[[ -d "$installDirectory/.old" ]]&& sudo rm -r "$installDirectory/.old"
	[[ -d "$installDirectory/tests" ]]&& sudo rm -r "$installDirectory/tests"

# Moving to /usr/local/
	print_GreenHash "Installing monero-bash in /usr/local/share/monero-bash/"
	permission_InstallDirectory
	sudo chown -R "$USER:$USER" "$installDirectory"
	sudo mv "$installDirectory" "/usr/local/share/"

# Resetting variables
	installDirectory="/usr/local/share/monero-bash"
	source "/usr/local/share/monero-bash/src/source"
	cd "/usr/local/share/monero-bash"

# Adding to PATH
	print_GreenHash "Adding monero-bash to PATH"
	path_Add

# Building $HOME/.monero-bash
	print_GreenHash "Building /.monero-bash/ folders"
	if [[ $alreadyFoundDataPath = "true" ]]; then
		build_Template
	else
		build_DotMoneroBash
	fi

# Setting Data Path
	print_GreenHash "Setting data path"
	if [[ $alreadyFoundDataPath = "true" ]]; then
		sed -i "s@.*data-dir.*@data-dir="$HOME/.bitmonero"@" "$config/monerod.conf"
	elif [[ $inputData != "" ]]; then
		sed -i "s@.*data-dir.*@data-dir="$inputData"@" "$config/monerod.conf"
	else
		sed -i "s@.*data-dir.*@data-dir="$bitMonero"@" "$config/monerod.conf"
	fi

# First Time = false , Set Installed User , chown
sudo sed -i "s@.*FIRST_TIME.*@FIRST_TIME=\"false\"@" "$state"
sudo sed -i "s@.*INSTALLED_USER.*@INSTALLED_USER=\"$USER\"@" "$state"
sudo chown -R "$USER:$USER" "$installDirectory"
permission_All
PRODUCE_HASH_LIST

#
#                       End
#
echo
$bred; echo "###################################################################"
$bred; echo "#                monero-bash installation complete                #"
$bred; echo "###################################################################"
$bwhite; echo -n "monero-bash path: " ;$white; echo "$dotMoneroBash"
$white; echo -n "Data: "
if [[ "$alreadyFoundDataPath" = "true" ]]; then
	echo "$HOME/.bitmonero"
elif [[ "$inputData" != "" ]]; then
	echo "$inputData"
else
	echo "$bitMonero"
fi
echo "Configs: $config"
echo "Wallets: $wallets"
echo
$white; echo -n "type: "
$bred; echo -n "monero-bash help "
$white; echo "to get started"
}
###################################################   END OF INSTALL FUNCTION   ###################################################

monerobash_Uninstall()
{
	$bwhite; echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
	$bwhite; echo -n "@   "
	$bred; echo -n "THIS WILL UNINSTALL monero-bash, DELETE /.monero-bash/ AND EVERYTHING INSIDE IT"
	$bwhite; echo "   @"
	$bwhite; echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
	print_Size
	$bwhite; echo -n "Uninstall "
	$ired; echo -n "monero-bash? "
	$bwhite; echo -n "(y/N) "
	Yes()
	{
		# if wallets are found, warn user
		walletCount="$(ls "$wallets" | wc -l)"
		if [[ "$walletCount" -gt 0 ]]; then
			echo
			$bwhite; echo -n "@@@@@@@@@@@@"
			$bred; echo -n "      WALLETS FOUND      "
			$bwhite; echo "@@@@@@@@@@@@"
			$bwhite; ls "$wallets"
			$bred; echo -n "ARE YOU SURE YOU WANT TO UNINSTALL? (y/N) " ;$bwhite
			Yes(){ : ;}
			No(){ $white; echo "Exiting..." ;exit;}
			prompt_NOyes
		fi
		prompt_Sudo
		error_Exit "Sudo is needed to uninstall"

		# 10 second countdown
		for i in {10..0} ;do
			tput sc
			if [[ "$i" = "0" ]]; then
				$bred; echo -n "Uninstalling..."
			else
				$bred; echo -n "Uninstalling in $i..."
			fi
			sleep 1
			if [[ $i != "0" ]]; then
				tput rc;tput el
			else
				echo;echo
			fi
		done

		# Hash Integrity Check
		print_GreenHash "Checking monero-bash hash integrity"
		QUIET_HASH_LIST

		# stop all running processes
		mine_Stop

		# removal
		trap "" 1 2 3 6 15
		print_WhiteHash "Removing $dotMoneroBash"
			sudo rm -rf "$dotMoneroBash"
			error_Exit "$dotMoneroBash not removed"
		print_WhiteHash "Removing from PATH"
			path_Remove
			error_Exit "PATH not removed"
		print_WhiteHash "Removing /usr/local/share/monero-bash/"
			sudo rm -rf "/usr/local/share/monero-bash"
			error_Exit "monero-bash not removed"
		print_WhiteHash "Removing systemd services"
			define_Monero
				[[ -e "$sysd/$SERVICE" ]]&& sudo rm "$sysd/$SERVICE" && error_Continue "$SERVICE not removed"
			define_XMRig
				[[ -e "$sysd/$SERVICE" ]]&& sudo rm "$sysd/$SERVICE" && error_Continue "$SERVICE not removed"
			define_P2Pool
				[[ -e "$sysd/$SERVICE" ]]&& sudo rm "$sysd/$SERVICE" && error_Continue "$SERVICE not removed"
		print_GreenHash "monero-bash has been uninstalled"
	}
	No(){ $white; echo "Exiting..." ;exit;}
	prompt_NOyes
}

#!/usr/bin/env bash

# Original code taken from: https://github.com/jtgrassie/xmrpc
# Modified slightly to work within monero-bash as a function.
#
# Copyright (c) 2014-2022, The Monero Project
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

rpc_Daemon()
{
quote()
{
	[[ "$1" =~ ^[0-9]+$ ]] && echo -n "$1" && return
	[[ "$1" =~ ^true|false$ ]] && echo -n "$1" && return
	[[ "${1::1}" == "[" ]] && echo -n "$(parse_arr $1)" && return
	echo -n "\"$1\""
}

parse_arr()
{
	let e=${#1}-2
	local sz=${1:1:$e}
	local a=(${sz//,/ })
	for i in "${!a[@]}"; do
		local a[$i]=$(quote ${a[i]})
	done
	local aj=$(printf ",%s" "${a[@]}")
	local aj=${aj:1}
	echo -n "[${aj}]"
}

parse_nv()
{
	local nv=(${1//:/ })
	local nc=${#nv[@]}
	[[ $c == 2 ]] && echo -n "$(quote ${nv[0]}):$(quote ${nv[1]})"
}

[[ "$1" == *:* ]] && local DAEMON_RPC_IP="$1" && shift
[[ $DAEMON_RPC_IP = "" ]] && local DAEMON_RPC_IP="http://localhost:18081"


local method="$1"
if [[ $method = /* ]]; then
	local DAEMON_RPC_IP="${DAEMON_RPC_IP}$method"
else
	local DAEMON_RPC_IP="$DAEMON_RPC_IP/json_rpc"
fi
shift

local payload="{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"$method\""
if [ -n "$1" ]; then
    if [[ "${1::1}" == "[" ]]; then
       local payload="$payload,\"params\":$(parse_arr $1)"
    else
        local payload="$payload,\"params\":{"
        while [ -n "$1" ]; do
            local payload="${payload}$(parse_nv $1)"
            [ -n "$2" ] && local payload="$payload,"
            shift
        done
        local payload="$payload}"
    fi
fi
local payload="$payload}"

if [[ $DAEMON_RPC_VERBOSE = "true" ]]; then
	echo "DAEMON_RPC_IP: $DAEMON_RPC_IP"
	echo "PAYLOAD: $payload"
	echo "METHOD: $method"
	echo "PARAMETERS: $(parse_arr $1)"
fi
wget \
	-qO- \
	$DAEMON_RPC_IP \
	--header='Content-Type:application/json' \
	--post-data=$payload
echo
}

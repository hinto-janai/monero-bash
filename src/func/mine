#!/usr/bin/env bash
#
# all-in-one mining functions
# invoked by "monero-bash <cmd> all"

mine_Start()
{
	missing_Monero
	missing_XMRig
	missing_P2Pool
	if [[ "$MINE_UNCONFIGURED" = "true" ]]; then
		mine_Config
	else
		define_Monero;process_Start
		define_P2Pool;process_Start
		define_XMRig;process_Start
		printf "Watch with: "
		$bwhite; echo "monero-bash watch <daemon/p2pool/xmrig>" ;$off
	fi
}

mine_Stop()
{
	prompt_Sudo;error_Sudo
	define_Monero;process_Stop
	define_P2Pool;process_Stop
	define_XMRig;process_Stop
}

mine_Restart()
{
	mine_Stop
	mine_Start
}

mine_Kill()
{
	prompt_Sudo;error_Sudo
	define_Monero;process_Kill
	define_P2Pool;process_Kill
	define_XMRig;process_Kill
}

mine_Config()
{
    $bred; echo "###########################################################"
    $bred; echo "#            monero-bash mining configuration             #"
    $bred; echo "###########################################################"

	# wallet + daemon ip + pool ip + mini config
	$bwhite; printf "WALLET ADDRESS: " ;$off
	read WALLET_INTERACTIVE
	$bwhite; printf "DIFFICULTY [default - 200000 / or "none"]: " ;$off
	read DIFFICULTY
	$bwhite; printf "DAEMON IP [default - 127.0.0.1]: " ;$off
	read IP
	$bwhite; printf "POOL IP [default - 127.0.0.1:3333]: " ;$off
	read POOL
	$bwhite; printf "Use P2Pool Mini-Pool? (Y/n): " ;$off
	Yes(){ MINI="true" ;}
	No(){ MINI="false" ;}
	prompt_YESno
	$bwhite; printf "P2Pool Log Level (0-6) [default - 2]: " ;$off
	read LOG

	# repeat & confirm user input
	$bblue; printf "WALLET ADDRESS: " ;$off; echo "$WALLET_INTERACTIVE"
	$bblue; printf "DIFFICULTY: " ;$off;
	if [[ "$DIFFICULTY" = "" ]]; then
		echo "200,000"
		DIFFICULTY="200000"
	elif [[ "$DIFFICULTY" = "none" || "$DIFFICULTY" = "None" ]]; then
		echo "none"
		DIFFICULTY="none"
	else
		echo "$DIFFICULTY"
	fi
	$bblue; printf "DAEMON IP: " ;$off
	if [[ "$IP" = "" ]]; then
		echo "127.0.0.1"
		IP="127.0.0.1"
	else
		echo "$IP"
	fi
	$bblue; printf "POOL IP: " ;$off
	if [[ "$POOL" = "" ]]; then
		echo "127.0.0.1:3333"
		POOL="127.0.0.1:3333"
	else
		echo "$POOL"
	fi
	$bblue; printf "P2POOL MINI: " ;$off
		echo "$MINI"
	$bblue; printf "P2POOL LOG LEVEL: " ;$off
	if [[ "$LOG" = "" ]]; then
		echo "2"
		LOG="2"
	else
		echo "$LOG"
	fi
	$bwhite; printf "Use these settings? (Y/n) "

	# set user input if yes, exit if no
	Yes()
	{
		prompt_Sudo ; error_Sudo
		safety_HashList
		trap "" 1 2 3 6 15

		# monero-bash.conf
		echo "Editing monero-bash.conf..."
		sudo -u "$USER" sed -i "s@.*DAEMON_IP.*@DAEMON_IP=\"$IP\"@" "$config/monero-bash.conf"
		sudo -u "$USER" sed -i "s@.*WALLET.*@WALLET=\"$WALLET_INTERACTIVE\"@" "$config/monero-bash.conf"
		sudo -u "$USER" sed -i "s@.*LOG_LEVEL.*@LOG_LEVEL=\"$LOG\"@" "$config/monero-bash.conf"
		[[ "$MINI" = "true" ]]&& sudo -u "$USER" sed -i "s@.*EXTRA_FLAGS.*@EXTRA_FLAGS=\"--mini\"@" "$config/monero-bash.conf"
		[[ "$MINI" != "true" ]]&& sudo -u "$USER" sed -i "s@.*EXTRA_FLAGS.*@EXTRA_FLAGS=\"\"@" "$config/monero-bash.conf"
		systemd_P2Pool

		# xmrig.json
		echo "Editing xmrig.json..."
		missing_config_XMRig
		if [[ "$DIFFICULTY" = "none" ]]; then
			sudo -u "$USER" sed -i "s@.*user.*@            \"user\": \"${WALLET_INTERACTIVE}\",@" "$xmrigConf"
		else
			sudo -u "$USER" sed -i "s@.*user.*@            \"user\": \"${WALLET_INTERACTIVE}+${DIFFICULTY}\",@" "$xmrigConf"
		fi
		sudo -u "$USER" sed -i "s@.*url.*@            \"url\": \"$POOL\",@" "$xmrigConf"

		# state file
		sudo -u "$USER" sed -i "s@.*MINE_UNCONFIGURED.*@MINE_UNCONFIGURED=\"false\"@" "$state"
		PRODUCE_HASH_LIST
		echo
		$bgreen; echo "Mining configuration complete"
		$white; echo -n "To get started: "
		$bwhite; echo "monero-bash start all"
	}
	No(){ echo "Exiting..." ;exit;}
	prompt_YESno
}
